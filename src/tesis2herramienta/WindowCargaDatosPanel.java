/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tesis2herramienta;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import pe.edu.pucp.tesis.algorithm.Grasp;
import pe.edu.pucp.tesis.algorithm.VariablesGenericas;
import pe.edu.pucp.tesis.algorithm.Voraz;
import pe.edu.pucp.tesis.config.ConfigAlgoritmo;
import pe.edu.pucp.tesis.util.LecturaArchivo;
import pe.edu.pucp.tesis.model.*;

/**
 *
 * @author PC-HP
 */
public class WindowCargaDatosPanel extends javax.swing.JPanel {

    String pathFile;
    Grasp gReference;
    Voraz vReference;
    boolean flagFileLoad=false;
    VariablesGenericas vg=new VariablesGenericas();
    
    public WindowCargaDatosPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPathFile = new javax.swing.JTextField();
        btnSeleccionar = new javax.swing.JButton();
        btnCargarDatos = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaPacientes = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        tablaMedicos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNumPac = new javax.swing.JTextField();
        txtNumEsp = new javax.swing.JTextField();
        txtNumMed = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        txtPathFile.setEditable(false);
        txtPathFile.setText("--Seleccione un archivo de datos --");

        btnSeleccionar.setBackground(new java.awt.Color(194, 227, 234));
        btnSeleccionar.setText("Seleccionar archivo");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        btnCargarDatos.setBackground(new java.awt.Color(194, 227, 234));
        btnCargarDatos.setText("Cargar datos");
        btnCargarDatos.setEnabled(false);
        btnCargarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarDatosActionPerformed(evt);
            }
        });

        jLabel2.setText("Datos Pacientes");

        jLabel3.setText("Datos Médicos");

        tablaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Edad", "Num. Hijos", "Ingreso(S/.)", "Especialidad Req.", "CMP", "Carga por enfermedad diagnosticada", "Número de consultas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaPacientes);
        if (tablaPacientes.getColumnModel().getColumnCount() > 0) {
            tablaPacientes.getColumnModel().getColumn(1).setMaxWidth(40);
            tablaPacientes.getColumnModel().getColumn(2).setMaxWidth(65);
            tablaPacientes.getColumnModel().getColumn(3).setMaxWidth(70);
            tablaPacientes.getColumnModel().getColumn(5).setMaxWidth(40);
        }

        tablaMedicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "CMP", "Experiencia", "Especialidad", "Turno L", "Turno M", "Turno MM", "Turno J", "Turno V", "Turno S", "Turno D"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(tablaMedicos);
        if (tablaMedicos.getColumnModel().getColumnCount() > 0) {
            tablaMedicos.getColumnModel().getColumn(1).setMaxWidth(40);
            tablaMedicos.getColumnModel().getColumn(4).setMaxWidth(60);
            tablaMedicos.getColumnModel().getColumn(5).setMaxWidth(60);
            tablaMedicos.getColumnModel().getColumn(6).setMaxWidth(60);
            tablaMedicos.getColumnModel().getColumn(7).setMaxWidth(60);
            tablaMedicos.getColumnModel().getColumn(8).setMaxWidth(60);
            tablaMedicos.getColumnModel().getColumn(9).setMaxWidth(60);
            tablaMedicos.getColumnModel().getColumn(10).setMaxWidth(60);
        }

        jLabel1.setText("Núm. Pacientes:");

        jLabel4.setText("Núm. Médicos: ");

        jLabel5.setText("Núm. Especialidades:");

        txtNumPac.setEditable(false);

        txtNumEsp.setEditable(false);

        txtNumMed.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNumPac, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNumMed, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtPathFile))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSeleccionar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnCargarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNumEsp, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 621, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addContainerGap(20, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCargarDatos)
                    .addComponent(btnSeleccionar)
                    .addComponent(txtPathFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(txtNumPac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumEsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumMed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Seleccionar archivo");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
          pathFile=chooser.getSelectedFile().getAbsolutePath();
          btnCargarDatos.setEnabled(true);
          txtPathFile.setText(pathFile);
        } 
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    public void cleanPanel()
    {
        txtPathFile.setText("--Seleccione un archivo de datos --");
        txtNumEsp.setText("");
        txtNumMed.setText("");
        txtNumPac.setText("");
        btnCargarDatos.setEnabled(false);   
    }
    
    private void btnCargarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarDatosActionPerformed
        flagFileLoad=true;
        vg=new VariablesGenericas();
        LecturaArchivo.leerDatos(vg, gReference, vReference,pathFile);
//        txtNumMed.setText(vg.listaMedicos.size()+"");
//        txtNumPac.setText(vg.listaPacientes.size()+"");
        
        txtNumMed.setText(ConfigAlgoritmo.N_MEDICOS+"");
        txtNumPac.setText(ConfigAlgoritmo.N_PACIENTES+"");
        txtNumEsp.setText(ConfigAlgoritmo.N_ESPECIALIDADES+"");
        JOptionPane.showMessageDialog(this, "Datos cargados","Confirmación",JOptionPane.INFORMATION_MESSAGE);
        mostrarDatosEnTabla(vg);
        
    }//GEN-LAST:event_btnCargarDatosActionPerformed

    public void mostrarDatosEnTabla(VariablesGenericas vg)
    {
        DefaultTableModel modeloPacientes=(DefaultTableModel)tablaPacientes.getModel();
        for (int i=0;i<tablaPacientes.getModel().getRowCount();i++)
            modeloPacientes.removeRow(0);
        
        for (Paciente p: vg.listaPacientes)
        {
            Object[] fila=new Object[8];
            fila[0]=p.getNombre();
            fila[1]=p.getEdad();
            fila[2]=p.getNumHijos();
            fila[3]=p.getIngresoMensual();
            fila[4]=p.getEspecialidadReq();
            fila[5]=(p.getMedicoTratante()!=null)?p.getMedicoTratante().getCmp():"";
            fila[6]=p.getCostoEnfDx();
            fila[7]=p.getNumCitasUltimoAnio();
            modeloPacientes.addRow(fila);
        }
        
        tablaPacientes.setModel(modeloPacientes);
        
        DefaultTableModel modeloMedicos=(DefaultTableModel)tablaMedicos.getModel();
        for (int i=0;i<tablaMedicos.getModel().getRowCount();i++)
            modeloMedicos.removeRow(0);
        
        for (Medico m: vg.listaMedicos)
        {
            Object[] fila=new Object[11];
            fila[0]=m.getNombre();
            fila[1]=m.getCmp();
            fila[2]=m.getExperiencia();
            fila[3]=m.getEspecialidad();
            fila[4]=vg.MT[0][m.getPosMatriz()];
            fila[5]=vg.MT[1][m.getPosMatriz()];
            fila[6]=vg.MT[2][m.getPosMatriz()];
            fila[7]=vg.MT[3][m.getPosMatriz()];
            fila[8]=vg.MT[4][m.getPosMatriz()];
            fila[9]=vg.MT[5][m.getPosMatriz()];
            fila[10]=vg.MT[6][m.getPosMatriz()];
            modeloMedicos.addRow(fila);
        }
        tablaMedicos.setModel(modeloMedicos);
    }
    
    public void obtenerDatosLeidos(Grasp g, Voraz v)
    {
        gReference=g;
        vReference=v;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarDatos;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable tablaMedicos;
    private javax.swing.JTable tablaPacientes;
    private javax.swing.JTextField txtNumEsp;
    private javax.swing.JTextField txtNumMed;
    private javax.swing.JTextField txtNumPac;
    private javax.swing.JTextField txtPathFile;
    // End of variables declaration//GEN-END:variables
}
